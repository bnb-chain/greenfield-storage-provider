name: Docker

on:
  push:
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  IMAGE_NAME: ghcr.io/bnb-chain/greenfield-storage-provider
  IMAGE_SOURCE: https://github.com/bnb-chain/greenfield-storage-provider

jobs:
  # Push image to GitHub Packages.
  push:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v3

      - uses: bufbuild/buf-setup-action@v1.14.0
        with:
          version: 1.14.0
          buf_user: "${{ secrets.BUF_REGISTRY_USER }}"
          buf_api_token: "${{ secrets.BUF_REGISTRY_SECRET }}"
      
      - name: Install Protoc
        uses: arduino/setup-protoc@v1

      - run: |
          go install github.com/bufbuild/buf/cmd/buf@v1.13.1
          go install github.com/gogo/protobuf/protoc-gen-gogofaster@latest
          buf generate

      - name: Build image
        run: |
          docker build . \
          --build-arg "GH_TOKEN=${{ secrets.GH_SECRET }}" \
          --label "org.opencontainers.image.source=${IMAGE_SOURCE}" \
          --label "org.opencontainers.image.revision=$(git rev-parse HEAD)" \
          --label "org.opencontainers.image.version=$(git describe --tags --abbrev=0)" \
          --label "org.opencontainers.image.licenses=LGPL-3.0,GPL-3.0" \
          -f ./Dockerfile -t "${IMAGE_NAME}"

      - name: Log into registry
        run: echo "${{ secrets.GH_SECRET }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_NAME=$IMAGE_NAME
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_NAME:$VERSION
          docker tag $IMAGE_NAME $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:latest
          