name: Golang Code Lint
# Lint runs golangci-lint over the entire Tendermint repository
# This workflow is run on every pull request and push to master
# The `golangci` job will pass without running if no *.{go, mod, sum} files have been modified.
on:
  push:
    branches:
      - master
      - develop

  pull_request:
    branches:
      - master
      - develop

jobs:
  golangci:
    name: golangci-lint
    runs-on: ubuntu-latest
    env:
      GOPRIVATE: github.com/bnb-chain
      GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
    timeout-minutes: 8
    strategy:
      matrix:
        go-version: [1.19.x]
    steps:
      - uses: actions/checkout@v3
      - name: Setup GitHub Token
        run: git config --global url.https://$GH_ACCESS_TOKEN@github.com/.insteadOf https://github.com/

      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install gogofaster
        run: go install github.com/gogo/protobuf/protoc-gen-gogofaster@latest
        
      - uses: bufbuild/buf-setup-action@v1.14.0
        with:
          version: 1.14.0
          buf_user: "${{ secrets.BUF_REGISTRY_USER }}"
          buf_api_token: "${{ secrets.BUF_REGISTRY_SECRET }}"
      
      - name: Install Protoc
        uses: arduino/setup-protoc@v1

      - run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2
          buf generate

      - uses: technote-space/get-diff-action@v6
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - run: |
          go mod tidy
          go mod download

      - uses: golangci/golangci-lint-action@v3
        with:
          # Required: the version of golangci-lint is required and
          # must be specified without patch version: we always use the
          # latest patch version.
          version: v1.50.1
          args: --timeout 10m
          github-token: ${{ secrets.github_token }}
        if: env.GIT_DIFF

#  golang-ci-lint-success:
#    needs: golangci
#    if: ${{ success() }}
#    runs-on: ubuntu-latest
#    steps:
#      - name: Notify Slack on success
#        uses: rtCamp/action-slack-notify@v2.2.0
#        env:
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
#          SLACK_CHANNEL: greenfield_storage_ci
#          SLACK_USERNAME: SP Golang CI Lint
#          SLACK_ICON_EMOJI: ':heavy_check_mark:'
#          SLACK_COLOR: good
#          SLACK_MESSAGE: Greenfield golang ci lint passed
#          SLACK_FOOTER: ''

#  golang-ci-lint-failure:
#    needs: golangci
#    if: ${{ failure() }}
#    runs-on: ubuntu-latest
#    steps:
#      - name: Notify Slack on failure
#        uses: rtCamp/action-slack-notify@v2.2.0
#        env:
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
#          SLACK_CHANNEL: greenfield_storage_ci
#          SLACK_USERNAME: SP Golang CI Lint
#          SLACK_ICON_EMOJI: ':x:'
#          SLACK_COLOR: danger
#          SLACK_MESSAGE: Greenfield golang ci lint failed
#          SLACK_FOOTER: ''