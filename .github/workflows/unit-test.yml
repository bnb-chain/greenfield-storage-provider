name: Unit Test

on:
  push:
    branches:
      - master
      - develop

  pull_request:
    branches:
      - master
      - develop

env:
  CGO_CFLAGS: "-O -D__BLST_PORTABLE__"
  CGO_CFLAGS_ALLOW: "-O -D__BLST_PORTABLE__"

jobs:
  unit-test:
    strategy:
      matrix:
        go-version: [1.19.x]
        os: [ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    env:
      GOPRIVATE: github.com/bnb-chain
      GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - uses: bufbuild/buf-setup-action@v1.14.0
        with:
          version: 1.14.0
          buf_user: "${{ secrets.BUF_REGISTRY_USER }}"
          buf_api_token: "${{ secrets.BUF_REGISTRY_SECRET }}"
      
      - name: Install Protoc
        uses: arduino/setup-protoc@v1

      - run: |
          go install github.com/bufbuild/buf/cmd/buf@v1.13.1
          go install github.com/gogo/protobuf/protoc-gen-gogo@latest
          buf generate

      - name: Setup GitHub Token
        run: git config --global url.https://$GH_ACCESS_TOKEN@github.com/.insteadOf https://github.com/

      - name: Unit Test
        run: |
          make test

#  unit-test-success:
#    needs: unit-test
#    if: ${{ success() }}
#    runs-on: ubuntu-latest
#    steps:
#      - name: Notify Slack on success
#        uses: rtCamp/action-slack-notify@v2.2.0
#        env:
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
#          SLACK_CHANNEL: greenfield_storage_ci
#          SLACK_USERNAME: SP Unit Test
#          SLACK_ICON_EMOJI: ':heavy_check_mark:'
#          SLACK_COLOR: good
#          SLACK_MESSAGE: Greenfield SP unit test passed
#          SLACK_FOOTER: ''

#  unit-test-failure:
#    needs: unit-test
#    if: ${{ failure() }}
#    runs-on: ubuntu-latest
#    steps:
#      - name: Notify Slack on failure
#        uses: rtCamp/action-slack-notify@v2.2.0
#        env:
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
#          SLACK_CHANNEL: greenfield_storage_ci
#          SLACK_USERNAME: SP Unit Test
#          SLACK_ICON_EMOJI: ':x:'
#          SLACK_COLOR: danger
#          SLACK_MESSAGE: Greenfield SP unit test failed
#          SLACK_FOOTER: ''