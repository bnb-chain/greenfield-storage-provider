syntax = "proto3";
package service.challenge.types;

import "greenfield/storage/types.proto";

option go_package = "github.com/bnb-chain/greenfield-storage-provider/service/challenge/types";

// ChallengePieceRequest is request type for the ChallengePiece RPC method.
message ChallengePieceRequest {
  // object_info defines the information of the object
  bnbchain.greenfield.storage.ObjectInfo object_info = 1;
  // segment_idx defines the challenge segment idx
  uint32 segment_idx = 2;
  // redundancy_idx defines the challenge redundancy idx
  // It is useless iff < 0, and as ec index iff > 0
  int32 redundancy_idx = 3;
}

// ChallengePieceResponse is response type for the ChallengePiece RPC method.
message ChallengePieceResponse {
  // piece_data defines the challenge segment data
  bytes piece_data = 1;
  // integrity_hash defines the integrity hash of the challenge replicate payload
  bytes integrity_hash = 2;
  // piece_hash defines the checksum of the challenge segment
  repeated bytes piece_hash = 3;
}

// ChallengeService defines the gRPC service of challenge piece.
service ChallengeService {
  // ChallengePiece challenges the piece of the object.
  rpc ChallengePiece(ChallengePieceRequest) returns (ChallengePieceResponse) {};
}
