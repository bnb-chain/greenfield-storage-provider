syntax = "proto3";
package service.uploader.types;

import "greenfield/storage/types.proto";
import "service/types/storage_provider.proto";

option go_package = "github.com/bnb-chain/greenfield-storage-provider/service/uploader/types";

// PutObjectRequest is request type for the UploadObject RPC method.
message PutObjectRequest {
  // object_info defines the information of the object.
  bnbchain.greenfield.storage.ObjectInfo object_info = 1;
  // payload defines the data of the object.
  bytes payload = 2;
}

// PutObjectResponse is response type for the UploadObject RPC method.
message PutObjectResponse {}

// QueryUPuttingObjectRequest is request type for the QueryPuttingObject RPC method.
message QueryPuttingObjectRequest {
  // object_id defines the unique id of the object.
  uint64 object_id = 1;
}

// QueryPuttingObjectResponse is response type for the QueryPuttingObject RPC method.
message QueryPuttingObjectResponse {
  // segment_info defines the information of uploading object.
  service.types.SegmentInfo segment_info = 1;
}

// UploaderService defines the gRPC service of uploading payload.
service UploaderService {
  // PutObject upload the payload of the object.
  rpc PutObject(stream PutObjectRequest) returns (PutObjectResponse) {};
  // QueryPuttingObject query an uploading object info with object id.
  rpc QueryPuttingObject(QueryPuttingObjectRequest) returns (QueryPuttingObjectResponse) {};
}
