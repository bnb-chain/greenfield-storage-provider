syntax = "proto3";
package service.metadata.types;

import "greenfield/storage/types.proto";

option go_package = "github.com/bnb-chain/greenfield-storage-provider/metadata/types";

// Bucket is the structure for user bucket
message Bucket {
  // bucket_info defines the information of the bucket.
  bnbchain.greenfield.storage.BucketInfo bucket_info = 1;
}

// Object is the structure for user object
message Object {
  // object_info defines the information of the object.
  bnbchain.greenfield.storage.ObjectInfo object_info = 1;
  // locked_balance defines locked balance of object
  string locked_balance = 2;
}

// MetadataServiceGetUserBucketsRequest is request type for the GetUserBuckets RPC method.
message MetadataServiceGetUserBucketsRequest {
  // account_id is the account address of user
  string account_id = 1;
}

// MetadataServiceListObjectsByBucketNameRequest is request type for the ListObjectsByBucketName RPC method
message MetadataServiceListObjectsByBucketNameRequest {
  // bucket_name is the name of the bucket
  string bucket_name = 1;
  // account_id is the account address of user
  string account_id = 2;
}

// MetadataServiceGetUserBucketsResponse is response type for the GetUserBuckets RPC method.
message MetadataServiceGetUserBucketsResponse {
  // buckets defines the list of bucket
  repeated Bucket buckets = 1;
}

// MetadataServiceListObjectsByBucketNameResponse is response type for the ListObjectsByBucketName RPC method.
message MetadataServiceListObjectsByBucketNameResponse {
  // objects defines the list of object
  repeated Object objects = 1;
}

// MetadataService defines the gRPC service of metadata
service MetadataService {
  // GetUserBuckets get buckets info by a user address
  rpc GetUserBuckets(MetadataServiceGetUserBucketsRequest) returns (MetadataServiceGetUserBucketsResponse) {};
  // ListObjectsByBucketName list objects info by a bucket name
  rpc ListObjectsByBucketName(MetadataServiceListObjectsByBucketNameRequest) returns (MetadataServiceListObjectsByBucketNameResponse) {};
}