syntax = "proto3";
package service.signer.types;

import "greenfield/storage/tx.proto";
import "pkg/p2p/types/p2p.proto";

option go_package = "github.com/bnb-chain/greenfield-storage-provider/service/signer/types";

// SignBucketApprovalRequest is request type for the SignBucketApproval RPC method.
message SignBucketApprovalRequest {
  // create_bucket_msg defines the information of the bucket creation.
  bnbchain.greenfield.storage.MsgCreateBucket create_bucket_msg = 1;
}

// SignBucketApprovalResponse is response type for the SignBucketApproval RPC method.
message SignBucketApprovalResponse {
  // signature defines the MsgCreateBucket signature that signed by the PrimarySP approval address.
  bytes signature = 1;
}

// VerifyBucketApprovalRequest is request type for the VerifyBucketApproval RPC method.
message VerifyBucketApprovalRequest {
  // create_bucket_msg defines the information of the bucket creation.
  bnbchain.greenfield.storage.MsgCreateBucket create_bucket_msg = 1;
}

// VerifyBucketApprovalResponse is response type for the VerifyBucketApproval RPC method.
message VerifyBucketApprovalResponse {
  // result defines the result of verifying signature from the PrimarySP approval address.
  bool result = 1;
}

// SignObjectApprovalRequest is request type for the SignObjectApproval RPC method.
message SignObjectApprovalRequest {
  // create_object_msg defines the information of the object creation.
  bnbchain.greenfield.storage.MsgCreateObject create_object_msg = 1;
}

// SignObjectApprovalResponse is response type for the SignObjectApproval RPC method.
message SignObjectApprovalResponse {
  // signature defines the MsgCreateObject signature that signed by the PrimarySP approval address.
  bytes signature = 1;
}

// VerifyObjectApprovalRequest is request type for the VerifyObjectApproval RPC method.
message VerifyObjectApprovalRequest {
  // result defines the result of verifying signature from the Primary approval address.
  bnbchain.greenfield.storage.MsgCreateObject create_object_msg = 1;
}

// VerifyObjectApprovalResponse is response type for the VerifyObjectApproval RPC method.
message VerifyObjectApprovalResponse {
  // result defines the result of verifying signature from the Primary approval address.
  bool result = 1;
}

// SignIntegrityHashRequest is request type for the SignIntegrityHash RPC method.
message SignIntegrityHashRequest {
  // data defines the Hash set that would be calculated to IntegrityHash and signed by the PrimarySP approval address.
  repeated bytes data = 1;
  // object_id defines the unique id of the object.
  uint64 object_id = 2;
}

// SignIntegrityHashResponse is response type for the SignIntegrityHash RPC method.
message SignIntegrityHashResponse {
  // integrity_hash defines the a Hash val that calculated by the input.
  bytes integrity_hash = 1;
  // signature defines the MsgCreateObject signature that signed by the PrimarySP approval address.
  bytes signature = 2;
}

// SealObjectOnChainRequest is request type for the SealObjectOnChain RPC method.
message SealObjectOnChainRequest {
  // seal_object defines the information of the seal object action.
  bnbchain.greenfield.storage.MsgSealObject seal_object = 1;
}

// SealObjectOnChainResponse is response type for the SealObjectOnChain RPC method.
message SealObjectOnChainResponse {
  // tx_hash defines the transaction hash of the sealing object on chain.
  bytes tx_hash = 1;
}

// DiscontinueBucketOnChainRequest is request type for the DiscontinueBucketOnChain RPC method.
message DiscontinueBucketOnChainRequest {
  // discontinue_bucket defines the information of the discontinue bucket action.
  bnbchain.greenfield.storage.MsgDiscontinueBucket discontinue_bucket = 1;
}

// DiscontinueBucketOnChainResponse is response type for the DiscontinueBucketOnChain RPC method.
message DiscontinueBucketOnChainResponse {
  // tx_hash defines the transaction hash of the discontinue bucket on chain.
  bytes tx_hash = 1;
}

// SignPingMsgRequest is request type for the SignPingMsg RPC method.
message SignPingMsgRequest {
  pkg.p2p.types.Ping ping = 1;
}

// SignPingMsgResponse is response type for the SignPingMsg RPC method.
message SignPingMsgResponse {
  pkg.p2p.types.Ping ping = 1;
}

// SignPongMsgRequest is request type for the SignPongMsg RPC method.
message SignPongMsgRequest {
  pkg.p2p.types.Pong pong = 1;
}

// SignPongMsgResponse is response type for the SignPongMsg RPC method.
message SignPongMsgResponse {
  pkg.p2p.types.Pong pong = 1;
}

// SignReplicateApprovalReqMsgRequest is request type for the SignReplicateApprovalReqMsg RPC method.
message SignReplicateApprovalReqMsgRequest {
  pkg.p2p.types.GetApprovalRequest approval = 1;
}

// SignGetApprovalReqResponse is response type for the SignReplicateApprovalReqMsg RPC method
message SignReplicateApprovalReqMsgResponse {
  pkg.p2p.types.GetApprovalRequest approval = 1;
}

// SignReplicateApprovalRspMsgRequest is request type for the SignReplicateApprovalRspMsg RPC method.
message SignReplicateApprovalRspMsgRequest {
  pkg.p2p.types.GetApprovalResponse approval = 1;
}

// SignReplicateApprovalRspMsgResponse is response type for the SignReplicateApprovalRspMsg RPC method
message SignReplicateApprovalRspMsgResponse {
  pkg.p2p.types.GetApprovalResponse approval = 1;
}

// SignerService defines the service for signing and verifying storage-related approvals and sealing objects on the chain.
service SignerService {
  // SignBucketApproval signs the approval for creating a storage bucket.
  rpc SignBucketApproval(SignBucketApprovalRequest) returns (SignBucketApprovalResponse) {};
  // VerifyBucketApproval verifies the approval for creating a storage bucket.
  rpc VerifyBucketApproval(VerifyBucketApprovalRequest) returns (VerifyBucketApprovalResponse) {};
  // SignObjectApproval signs the approval for creating a storage object.
  rpc SignObjectApproval(SignObjectApprovalRequest) returns (SignObjectApprovalResponse) {};
  // VerifyObjectApproval verifies the approval for creating a storage object.
  rpc VerifyObjectApproval(VerifyObjectApprovalRequest) returns (VerifyObjectApprovalResponse) {};
  // SignIntegrityHash signs the integrity hash of the given data.
  rpc SignIntegrityHash(SignIntegrityHashRequest) returns (SignIntegrityHashResponse) {};
  // SealObjectOnChain seals the storage object on the blockchain.
  rpc SealObjectOnChain(SealObjectOnChainRequest) returns (SealObjectOnChainResponse) {};
  // DiscontinueBucketOnChain discontinues the storage bucket on the blockchain.
  rpc DiscontinueBucketOnChain(DiscontinueBucketOnChainRequest) returns (DiscontinueBucketOnChainResponse) {};
  // SignPingMsg signs the ping msg for p2p node
  rpc SignPingMsg(SignPingMsgRequest) returns (SignPingMsgResponse){}
  // SignPongMsg signs the pong msg for p2p node
  rpc SignPongMsg(SignPongMsgRequest) returns (SignPongMsgResponse){}
  // SignReplicateApprovalReqMsg signs the get approval request msg for p2p node
  rpc SignReplicateApprovalReqMsg(SignReplicateApprovalReqMsgRequest) returns (SignReplicateApprovalReqMsgResponse){}
  // SignReplicateApprovalRspMsg signs the get approval response msg for p2p node
  rpc SignReplicateApprovalRspMsg(SignReplicateApprovalRspMsgRequest) returns (SignReplicateApprovalRspMsgResponse){}
}