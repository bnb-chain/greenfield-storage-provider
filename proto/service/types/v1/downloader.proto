syntax = "proto3";
package service.types.v1;
import "service/types/v1/uploader.proto";
option go_package = "github.com/bnb-chain/greenfield-storage-provider/service/types/v1";

message DownloaderServiceDownloaderObjectRequest {
  string trace_id = 1;
  string bucket_name = 2;
  string object_name = 3;
  uint64 offset = 4;
  uint64 length = 5; // if length == 0, download all object data

  bool is_range = 6;
  // [range_start, range_end], range_start >= object_size is invalid, download all object data
  int64 range_start = 7;
  // range_end >= object_size is invalid, download all object data
  // range_end < 0, download [range_start, object_end]
  int64 range_end = 8;
}

message DownloaderServiceDownloaderObjectResponse {
  string trace_id = 1;
  bool is_valid_range = 2;
  bytes data = 3;
  ErrMessage err_message = 4;
}

message DownloaderServiceDownloaderSegmentRequest {
  string trace_id = 1;
  uint64 object_id = 2;
  uint32 segment_idx = 3;
}

message DownloaderServiceDownloaderSegmentResponse {
  string trace_id = 1;
  bytes data = 2;
  ErrMessage err_message = 3;
}

service DownloaderService {
  rpc DownloaderObject(DownloaderServiceDownloaderObjectRequest) returns (stream DownloaderServiceDownloaderObjectResponse) {};
  rpc DownloaderSegment(DownloaderServiceDownloaderSegmentRequest) returns (DownloaderServiceDownloaderSegmentResponse) {};
}
