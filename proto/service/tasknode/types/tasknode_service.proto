syntax = "proto3";
package service.tasknode.types;

import "greenfield/storage/types.proto";
import "service/types/storage_provider.proto";

option go_package = "github.com/bnb-chain/greenfield-storage-provider/service/tasknode/types";

// ReplicateObjectRequest is request type for the ReplicateObject RPC method.
message ReplicateObjectRequest {
  // object_info defines the information of the object.
  bnbchain.greenfield.storage.ObjectInfo object_info = 1;
}

// ReplicateObjectResponse is response type for the ReplicateObject RPC method.
message ReplicateObjectResponse {
}

// QueryReplicatingObjectRequest is request type for the QueryReplicatingObject RPC method.
message QueryReplicatingObjectRequest {
  // object_id defines the unique id of the object.
  uint64 object_id = 1;
}

// QueryReplicatingObjectResponse is response type for the QueryReplicatingObject RPC method.
message QueryReplicatingObjectResponse {
  // replicate_segment_info defines the information of uploading object.
  service.types.ReplicateSegmentInfo replicate_segment_info = 1;
}

// TaskNodeService defines the gRPC service of background tasks in storage provider.
service TaskNodeService {
  // ReplicateObject replicate an object payload to other storage providers.
  rpc ReplicateObject(ReplicateObjectRequest) returns (ReplicateObjectResponse) {};
  // QueryReplicatingObject query a replicating object payload information by object id.
  rpc QueryReplicatingObject(QueryReplicatingObjectRequest) returns (QueryReplicatingObjectResponse) {};
}