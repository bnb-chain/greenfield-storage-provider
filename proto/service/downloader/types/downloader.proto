syntax = "proto3";
package service.downloader.types;

option go_package = "github.com/bnb-chain/greenfield-storage-provider/service/downloader/types";

// DownloaderObjectRequest is request type for the DownloaderObject RPC method.
message DownloaderObjectRequest {
  // bucket_name defines the download bucket name
  string bucket_name = 1;
  // object_name defines the download object name
  string object_name = 2;
  // offset defines the download payload offset
  uint64 offset = 3;
  // length defines the download payload length
  uint64 length = 4; // if length == 0, download all object data
  // is_range indicate whether it is rang download, compatible aws s3
  bool is_range = 5;
  // range_start defines the start of range
  // [range_start, range_end], range_start >= object_size is invalid, download all object data
  int64 range_start = 6;
  // range_end defines the end of range
  // range_end >= object_size is invalid, download all object data
  // range_end < 0, download [range_start, object_end]
  int64 range_end = 7;
}

// DownloaderObjectResponse is response type for the DownloaderObject RPC method.
message DownloaderObjectResponse {
  // is_valid_range indicates whether ths range valid
  bool is_valid_range = 1;
  // data defines the download data
  bytes data = 2;
}

// DownloaderService defines the gRPC service of download payload.
service DownloaderService {
  // DownloaderObject download the payload of the object.
  rpc DownloaderObject(DownloaderObjectRequest) returns (stream DownloaderObjectResponse) {};
}
