syntax = "proto3";
package service.downloader.types;

import "greenfield/storage/types.proto";

option go_package = "github.com/bnb-chain/greenfield-storage-provider/service/downloader/types";

// GetObjectRequest is request type for the GetObject RPC method.
message GetObjectRequest {
  // bucket_info defines the information of the bucket.
  bnbchain.greenfield.storage.BucketInfo bucket_info = 1;
  // object_info defines the information of the object.
  bnbchain.greenfield.storage.ObjectInfo object_info = 2;
  // user_address defines the request user address.
  string user_address = 3;
  // offset defines the download payload offset
  uint64 offset = 4;
  // length defines the download payload length
  uint64 length = 5; // if length == 0, download all object data
  // is_range indicate whether it is rang download, compatible aws s3
  bool is_range = 6;
  // range_start defines the start of range
  // [range_start, range_end], range_start >= object_size is invalid, download all object data
  int64 range_start = 7;
  // range_end defines the end of range
  // range_end >= object_size is invalid, download all object data
  // range_end < 0, download [range_start, object_end]
  int64 range_end = 8;
}

// GetObjectResponse is response type for the GetObject RPC method.
message GetObjectResponse {
  // is_valid_range indicates whether ths range valid
  bool is_valid_range = 1;
  // data defines the download data
  bytes data = 2;
}

// DownloaderService defines the gRPC service of download payload.
service DownloaderService {
  // GetObject download the payload of the object.
  rpc GetObject(GetObjectRequest) returns (stream GetObjectResponse) {};
}
