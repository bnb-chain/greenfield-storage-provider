syntax = "proto3";
package service.downloader.types;

import "gogoproto/gogo.proto";
import "greenfield/storage/types.proto";

option go_package = "github.com/bnb-chain/greenfield-storage-provider/service/downloader/types";

// GetObjectRequest is request type for the GetObject RPC method.
message GetObjectRequest {
  // bucket_info defines the information of the bucket.
  bnbchain.greenfield.storage.BucketInfo bucket_info = 1;
  // object_info defines the information of the object.
  bnbchain.greenfield.storage.ObjectInfo object_info = 2;
  // user_address defines the request user address.
  string user_address = 3;
  // is_range indicate whether it is ranged get, compatible aws s3
  bool is_range = 4;
  // range_start defines the start of range, [range_start, range_end],
  // it is valid iff is_range is true.
  uint64 range_start = 5;
  // range_end defines the end of range, [range_start, range_end],
  // it is valid iff is_range is true.
  uint64 range_end = 6;
}

// GetObjectResponse is response type for the GetObject RPC method.
message GetObjectResponse {
  // data defines the download data
  bytes data = 1;
}

// GetBucketReadQuotaRequest is request type for the GetBucketReadQuota RPC method.
message GetBucketReadQuotaRequest {
  // bucket info from the greenfield chain
  bnbchain.greenfield.storage.BucketInfo bucket_info = 1;
  // year_month is the query bucket quota's month, like "2023-03"
  string year_month = 2;
}

// GetBucketReadQuotaResponse is response type for the GetBucketReadQuota RPC method.
message GetBucketReadQuotaResponse {
  // charged_quota_size is the greenfield chain bucket info's read quota size
  uint64 charged_quota_size = 1;
  // sp_free_quota_size is the sp default free quota
  uint64 sp_free_quota_size = 2;
  // consumed_size is currently consumed size
  uint64 consumed_size = 3;
}

// ListBucketReadRecordRequest is request type for the ListBucketReadRecord RPC method.
message ListBucketReadRecordRequest {
  // bucket info from the greenfield chain
  bnbchain.greenfield.storage.BucketInfo bucket_info = 1;
  // start_timestamp_us is the list request's left side, like [start_timestamp_us, end_timestamp_us)
  int64 start_timestamp_us = 2;
  // start_timestamp_us is the list request's right side, like [start_timestamp_us, end_timestamp_us)
  int64 end_timestamp_us = 3;
  // max_record_num is used to limit max list records
  int64 max_record_num =4;
}

// ReadRecord is used to record the read request.
message ReadRecord {
  // object_name is the read object name
  string object_name = 1;
  // object_id is the read object id
  uint64 object_id = 2;
  // account_address is the read account address
  string account_address = 3;
  // timestamp_us is the read time stamp
  int64 timestamp_us = 4;
  // read_size is the read object size
  uint64 read_size = 5;
}

// ListBucketReadRecordResponse is response type for the ListBucketReadRecord RPC method.
message ListBucketReadRecordResponse {
  // read_records are the read record list
  repeated ReadRecord read_records = 1[(gogoproto.nullable) = true];
  // next_start_timestamp_us is used to fetch next batch, When the list is completed, it is 0.
  int64 next_start_timestamp_us = 2;
}

// GetEndpointBySpAddressRequest is request type for the GetEndpointBySpAddress RPC method
message GetEndpointBySpAddressRequest {
  // sp_address is the address of the sp
  string sp_address = 1;
}

// GetEndpointBySpAddressResponse is response type for the GetEndpointBySpAddress RPC method.
message GetEndpointBySpAddressResponse {
  // endpoint defines endpoint of a sp
  string endpoint = 1;
}

// DownloaderService defines the gRPC service of download payload.
service DownloaderService {
  // GetObject downloads the payload of the object.
  rpc GetObject(GetObjectRequest) returns (stream GetObjectResponse) {};
  // GetBucketReadQuota gets the quota info of the specified month.
  rpc GetBucketReadQuota(GetBucketReadQuotaRequest) returns (GetBucketReadQuotaResponse) {};
  // ListBucketReadRecord gets read record list of the specified time range.
  rpc ListBucketReadRecord(ListBucketReadRecordRequest) returns (ListBucketReadRecordResponse) {};
  // GetEndpointBySpAddress get endpoint info by a sp address
  rpc GetEndpointBySpAddress(GetEndpointBySpAddressRequest) returns (GetEndpointBySpAddressResponse) {};
}
