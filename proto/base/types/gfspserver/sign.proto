syntax = "proto3";
package base.types.gfspserver;

import "base/types/gfsperrors/error.proto";
import "base/types/gfspp2p/p2p.proto";
import "base/types/gfsptask/task.proto";
import "cosmos/base/v1beta1/coin.proto";
import "greenfield/storage/tx.proto";
import "greenfield/storage/common.proto";
import "greenfield/virtualgroup/tx.proto";

option go_package = "github.com/bnb-chain/greenfield-storage-provider/base/types/gfspserver";

message GfSpSignSecondaryBls {
  uint64 object_id = 1;
  uint32 global_virtual_group_id = 2;
  repeated bytes checksums = 3;
}

// TODO: use chain MsgCreateGlobalVirtualGroup replace it.
message GfSpCreateGlobalVirtualGroup {
  uint32 virtual_group_family_id = 1;
  string primary_sp_address = 2;
  repeated uint32 secondary_sp_ids = 3;
  cosmos.base.v1beta1.Coin deposit = 4;
}

message GfSpSignRequest {
  oneof request {
    greenfield.storage.MsgCreateBucket create_bucket_info = 1;
    greenfield.storage.MsgMigrateBucket migrate_bucket_info = 2;
    greenfield.storage.MsgCreateObject create_object_info = 3;
    greenfield.storage.MsgSealObject seal_object_info = 4;
    greenfield.storage.MsgDiscontinueBucket discontinue_bucket_info = 5;
    GfSpSignSecondaryBls sign_secondary_bls = 6;
    base.types.gfspp2p.GfSpPing ping_msg = 7;
    base.types.gfspp2p.GfSpPong pong_msg = 8;
    base.types.gfsptask.GfSpReplicatePieceApprovalTask gfsp_replicate_piece_approval_task = 9;
    base.types.gfsptask.GfSpReceivePieceTask gfsp_receive_piece_task = 10;
    base.types.gfsptask.GfSpRecoverPieceTask gfsp_recover_piece_task = 11;
    greenfield.storage.MsgRejectSealObject reject_object_info = 12;
    GfSpCreateGlobalVirtualGroup create_global_virtual_group = 13;
    base.types.gfsptask.GfSpMigratePieceTask gfsp_migrate_piece_task = 14;
    greenfield.storage.MsgCompleteMigrateBucket complete_migrate_bucket = 15;
    greenfield.storage.SecondarySpMigrationBucketSignDoc sign_secondary_sp_migration_bucket = 16;
    greenfield.virtualgroup.MsgSwapOut swap_out = 17;
  }
}

message GfSpSignResponse {
  base.types.gfsperrors.GfSpError err = 1;
  bytes signature = 2;
  string tx_hash = 3;
}

service GfSpSignService {
  rpc GfSpSign(GfSpSignRequest) returns (GfSpSignResponse) {}
}
