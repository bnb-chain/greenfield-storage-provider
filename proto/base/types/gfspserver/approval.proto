syntax = "proto3";
package base.types.gfspserver;

import "base/types/gfsperrors/error.proto";
import "base/types/gfsptask/task.proto";

option go_package = "github.com/bnb-chain/greenfield-storage-provider/base/types/gfspserver";

message GfSpAskApprovalRequest {
  oneof request {
    base.types.gfsptask.GfSpCreateBucketApprovalTask create_bucket_approval_task = 1;
    base.types.gfsptask.GfSpMigrateBucketApprovalTask migrate_bucket_approval_task = 2;
    base.types.gfsptask.GfSpCreateObjectApprovalTask create_object_approval_task = 3;
  }
}

message GfSpAskApprovalResponse {
  base.types.gfsperrors.GfSpError err = 1;
  bool allowed = 2;
  oneof response {
    base.types.gfsptask.GfSpCreateBucketApprovalTask create_bucket_approval_task = 3;
    base.types.gfsptask.GfSpMigrateBucketApprovalTask migrate_bucket_approval_task = 4;
    base.types.gfsptask.GfSpCreateObjectApprovalTask create_object_approval_task = 5;
  }
}

service GfSpApprovalService {
  rpc GfSpAskApproval(GfSpAskApprovalRequest) returns (GfSpAskApprovalResponse) {}
}
