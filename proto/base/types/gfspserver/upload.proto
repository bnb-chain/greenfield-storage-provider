syntax = "proto3";
package base.types.gfspserver;

import "base/types/gfsperrors/error.proto";
import "base/types/gfsptask/task.proto";

option go_package = "github.com/zkMeLabs/mechain-storage-provider/base/types/gfspserver";

message GfSpUploadObjectRequest {
  base.types.gfsptask.GfSpUploadObjectTask upload_object_task = 1;
  bytes payload = 2;
}

message GfSpUploadObjectResponse { base.types.gfsperrors.GfSpError err = 1; }

message GfSpResumableUploadObjectRequest {
  base.types.gfsptask.GfSpResumableUploadObjectTask
      resumable_upload_object_task = 1;
  bytes payload = 2;
}

message GfSpResumableUploadObjectResponse {
  base.types.gfsperrors.GfSpError err = 1;
}

service GfSpUploadService {
  rpc GfSpUploadObject(stream GfSpUploadObjectRequest)
      returns (GfSpUploadObjectResponse) {}
  // TODO(chris): It is recommended to use the segment buffer as a single
  // request instead of the GRPC stream, as the performance
  //  of the GRPC stream is not satisfactory.
  rpc GfSpResumableUploadObject(stream GfSpResumableUploadObjectRequest)
      returns (GfSpResumableUploadObjectResponse) {}
}
