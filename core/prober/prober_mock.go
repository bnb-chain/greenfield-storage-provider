// Code generated by MockGen. DO NOT EDIT.
// Source: ./prober.go

// Package prober is a generated GoMock package.
package prober

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockProber is a mock of Prober interface.
type MockProber struct {
	ctrl     *gomock.Controller
	recorder *MockProberMockRecorder
}

// MockProberMockRecorder is the mock recorder for MockProber.
type MockProberMockRecorder struct {
	mock *MockProber
}

// NewMockProber creates a new mock instance.
func NewMockProber(ctrl *gomock.Controller) *MockProber {
	mock := &MockProber{ctrl: ctrl}
	mock.recorder = &MockProberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProber) EXPECT() *MockProberMockRecorder {
	return m.recorder
}

// Healthy mocks base method.
func (m *MockProber) Healthy() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Healthy")
}

// Healthy indicates an expected call of Healthy.
func (mr *MockProberMockRecorder) Healthy() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Healthy", reflect.TypeOf((*MockProber)(nil).Healthy))
}

// Ready mocks base method.
func (m *MockProber) Ready() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Ready")
}

// Ready indicates an expected call of Ready.
func (mr *MockProberMockRecorder) Ready() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ready", reflect.TypeOf((*MockProber)(nil).Ready))
}

// Unhealthy mocks base method.
func (m *MockProber) Unhealthy(err error) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Unhealthy", err)
}

// Unhealthy indicates an expected call of Unhealthy.
func (mr *MockProberMockRecorder) Unhealthy(err interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Unhealthy", reflect.TypeOf((*MockProber)(nil).Unhealthy), err)
}

// Unready mocks base method.
func (m *MockProber) Unready(err error) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Unready", err)
}

// Unready indicates an expected call of Unready.
func (mr *MockProberMockRecorder) Unready(err interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Unready", reflect.TypeOf((*MockProber)(nil).Unready), err)
}
