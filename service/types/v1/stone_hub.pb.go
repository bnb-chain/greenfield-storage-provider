// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: service/types/v1/stone_hub.proto

package v1

import (
	v1 "github.com/bnb-chain/inscription-storage-provider/pkg/types/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StoneHubServiceCreateObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId    uint64         `protobuf:"varint,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	TxHash     []byte         `protobuf:"bytes,2,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	ObjectInfo *v1.ObjectInfo `protobuf:"bytes,3,opt,name=object_info,json=objectInfo,proto3" json:"object_info,omitempty"`
}

func (x *StoneHubServiceCreateObjectRequest) Reset() {
	*x = StoneHubServiceCreateObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_types_v1_stone_hub_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoneHubServiceCreateObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoneHubServiceCreateObjectRequest) ProtoMessage() {}

func (x *StoneHubServiceCreateObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_types_v1_stone_hub_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoneHubServiceCreateObjectRequest.ProtoReflect.Descriptor instead.
func (*StoneHubServiceCreateObjectRequest) Descriptor() ([]byte, []int) {
	return file_service_types_v1_stone_hub_proto_rawDescGZIP(), []int{0}
}

func (x *StoneHubServiceCreateObjectRequest) GetTraceId() uint64 {
	if x != nil {
		return x.TraceId
	}
	return 0
}

func (x *StoneHubServiceCreateObjectRequest) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *StoneHubServiceCreateObjectRequest) GetObjectInfo() *v1.ObjectInfo {
	if x != nil {
		return x.ObjectInfo
	}
	return nil
}

type StoneHubServiceCreateObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId    uint64      `protobuf:"varint,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	ErrMessage *ErrMessage `protobuf:"bytes,2,opt,name=err_message,json=errMessage,proto3" json:"err_message,omitempty"`
}

func (x *StoneHubServiceCreateObjectResponse) Reset() {
	*x = StoneHubServiceCreateObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_types_v1_stone_hub_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoneHubServiceCreateObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoneHubServiceCreateObjectResponse) ProtoMessage() {}

func (x *StoneHubServiceCreateObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_types_v1_stone_hub_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoneHubServiceCreateObjectResponse.ProtoReflect.Descriptor instead.
func (*StoneHubServiceCreateObjectResponse) Descriptor() ([]byte, []int) {
	return file_service_types_v1_stone_hub_proto_rawDescGZIP(), []int{1}
}

func (x *StoneHubServiceCreateObjectResponse) GetTraceId() uint64 {
	if x != nil {
		return x.TraceId
	}
	return 0
}

func (x *StoneHubServiceCreateObjectResponse) GetErrMessage() *ErrMessage {
	if x != nil {
		return x.ErrMessage
	}
	return nil
}

type StoneHubServiceBeginUploadPayloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId uint64 `protobuf:"varint,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	TxHash  []byte `protobuf:"bytes,2,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	JobId   uint64 `protobuf:"varint,3,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"` // optional
}

func (x *StoneHubServiceBeginUploadPayloadRequest) Reset() {
	*x = StoneHubServiceBeginUploadPayloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_types_v1_stone_hub_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoneHubServiceBeginUploadPayloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoneHubServiceBeginUploadPayloadRequest) ProtoMessage() {}

func (x *StoneHubServiceBeginUploadPayloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_types_v1_stone_hub_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoneHubServiceBeginUploadPayloadRequest.ProtoReflect.Descriptor instead.
func (*StoneHubServiceBeginUploadPayloadRequest) Descriptor() ([]byte, []int) {
	return file_service_types_v1_stone_hub_proto_rawDescGZIP(), []int{2}
}

func (x *StoneHubServiceBeginUploadPayloadRequest) GetTraceId() uint64 {
	if x != nil {
		return x.TraceId
	}
	return 0
}

func (x *StoneHubServiceBeginUploadPayloadRequest) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *StoneHubServiceBeginUploadPayloadRequest) GetJobId() uint64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

type StoneHubServiceBeginUploadPayloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId        uint64            `protobuf:"varint,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	JobId          uint64            `protobuf:"varint,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	TxHash         []byte            `protobuf:"bytes,3,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	PayloadSize    uint64            `protobuf:"varint,4,opt,name=payload_size,json=payloadSize,proto3" json:"payload_size,omitempty"`
	SegmentSize    uint64            `protobuf:"varint,5,opt,name=segment_size,json=segmentSize,proto3" json:"segment_size,omitempty"`
	RedundancyType v1.RedundancyType `protobuf:"varint,6,opt,name=redundancy_type,json=redundancyType,proto3,enum=pkg.types.v1.RedundancyType" json:"redundancy_type,omitempty"`
	ErrMessage     *ErrMessage       `protobuf:"bytes,7,opt,name=err_message,json=errMessage,proto3" json:"err_message,omitempty"`
}

func (x *StoneHubServiceBeginUploadPayloadResponse) Reset() {
	*x = StoneHubServiceBeginUploadPayloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_types_v1_stone_hub_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoneHubServiceBeginUploadPayloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoneHubServiceBeginUploadPayloadResponse) ProtoMessage() {}

func (x *StoneHubServiceBeginUploadPayloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_types_v1_stone_hub_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoneHubServiceBeginUploadPayloadResponse.ProtoReflect.Descriptor instead.
func (*StoneHubServiceBeginUploadPayloadResponse) Descriptor() ([]byte, []int) {
	return file_service_types_v1_stone_hub_proto_rawDescGZIP(), []int{3}
}

func (x *StoneHubServiceBeginUploadPayloadResponse) GetTraceId() uint64 {
	if x != nil {
		return x.TraceId
	}
	return 0
}

func (x *StoneHubServiceBeginUploadPayloadResponse) GetJobId() uint64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *StoneHubServiceBeginUploadPayloadResponse) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *StoneHubServiceBeginUploadPayloadResponse) GetPayloadSize() uint64 {
	if x != nil {
		return x.PayloadSize
	}
	return 0
}

func (x *StoneHubServiceBeginUploadPayloadResponse) GetSegmentSize() uint64 {
	if x != nil {
		return x.SegmentSize
	}
	return 0
}

func (x *StoneHubServiceBeginUploadPayloadResponse) GetRedundancyType() v1.RedundancyType {
	if x != nil {
		return x.RedundancyType
	}
	return v1.RedundancyType(0)
}

func (x *StoneHubServiceBeginUploadPayloadResponse) GetErrMessage() *ErrMessage {
	if x != nil {
		return x.ErrMessage
	}
	return nil
}

type StoneHubServiceDonePrimaryPieceJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId    uint64      `protobuf:"varint,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	JobId      uint64      `protobuf:"varint,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	SegmentIdx uint32      `protobuf:"varint,3,opt,name=segment_idx,json=segmentIdx,proto3" json:"segment_idx,omitempty"`
	ErrMessage *ErrMessage `protobuf:"bytes,4,opt,name=err_message,json=errMessage,proto3" json:"err_message,omitempty"`
}

func (x *StoneHubServiceDonePrimaryPieceJobRequest) Reset() {
	*x = StoneHubServiceDonePrimaryPieceJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_types_v1_stone_hub_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoneHubServiceDonePrimaryPieceJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoneHubServiceDonePrimaryPieceJobRequest) ProtoMessage() {}

func (x *StoneHubServiceDonePrimaryPieceJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_types_v1_stone_hub_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoneHubServiceDonePrimaryPieceJobRequest.ProtoReflect.Descriptor instead.
func (*StoneHubServiceDonePrimaryPieceJobRequest) Descriptor() ([]byte, []int) {
	return file_service_types_v1_stone_hub_proto_rawDescGZIP(), []int{4}
}

func (x *StoneHubServiceDonePrimaryPieceJobRequest) GetTraceId() uint64 {
	if x != nil {
		return x.TraceId
	}
	return 0
}

func (x *StoneHubServiceDonePrimaryPieceJobRequest) GetJobId() uint64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *StoneHubServiceDonePrimaryPieceJobRequest) GetSegmentIdx() uint32 {
	if x != nil {
		return x.SegmentIdx
	}
	return 0
}

func (x *StoneHubServiceDonePrimaryPieceJobRequest) GetErrMessage() *ErrMessage {
	if x != nil {
		return x.ErrMessage
	}
	return nil
}

type StoneHubServiceDonePrimaryPieceJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId    uint64      `protobuf:"varint,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	ErrMessage *ErrMessage `protobuf:"bytes,2,opt,name=err_message,json=errMessage,proto3" json:"err_message,omitempty"`
}

func (x *StoneHubServiceDonePrimaryPieceJobResponse) Reset() {
	*x = StoneHubServiceDonePrimaryPieceJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_types_v1_stone_hub_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoneHubServiceDonePrimaryPieceJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoneHubServiceDonePrimaryPieceJobResponse) ProtoMessage() {}

func (x *StoneHubServiceDonePrimaryPieceJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_types_v1_stone_hub_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoneHubServiceDonePrimaryPieceJobResponse.ProtoReflect.Descriptor instead.
func (*StoneHubServiceDonePrimaryPieceJobResponse) Descriptor() ([]byte, []int) {
	return file_service_types_v1_stone_hub_proto_rawDescGZIP(), []int{5}
}

func (x *StoneHubServiceDonePrimaryPieceJobResponse) GetTraceId() uint64 {
	if x != nil {
		return x.TraceId
	}
	return 0
}

func (x *StoneHubServiceDonePrimaryPieceJobResponse) GetErrMessage() *ErrMessage {
	if x != nil {
		return x.ErrMessage
	}
	return nil
}

type StoneHubServiceAllocStoneJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId uint64 `protobuf:"varint,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
}

func (x *StoneHubServiceAllocStoneJobRequest) Reset() {
	*x = StoneHubServiceAllocStoneJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_types_v1_stone_hub_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoneHubServiceAllocStoneJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoneHubServiceAllocStoneJobRequest) ProtoMessage() {}

func (x *StoneHubServiceAllocStoneJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_types_v1_stone_hub_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoneHubServiceAllocStoneJobRequest.ProtoReflect.Descriptor instead.
func (*StoneHubServiceAllocStoneJobRequest) Descriptor() ([]byte, []int) {
	return file_service_types_v1_stone_hub_proto_rawDescGZIP(), []int{6}
}

func (x *StoneHubServiceAllocStoneJobRequest) GetTraceId() uint64 {
	if x != nil {
		return x.TraceId
	}
	return 0
}

type StoneHubServiceAllocStoneJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId uint64 `protobuf:"varint,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	// Types that are assignable to StoneJobOneof:
	//	*StoneHubServiceAllocStoneJobResponse_SecondaryPieceJob
	StoneJobOneof isStoneHubServiceAllocStoneJobResponse_StoneJobOneof `protobuf_oneof:"stone_job_oneof"`
}

func (x *StoneHubServiceAllocStoneJobResponse) Reset() {
	*x = StoneHubServiceAllocStoneJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_types_v1_stone_hub_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoneHubServiceAllocStoneJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoneHubServiceAllocStoneJobResponse) ProtoMessage() {}

func (x *StoneHubServiceAllocStoneJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_types_v1_stone_hub_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoneHubServiceAllocStoneJobResponse.ProtoReflect.Descriptor instead.
func (*StoneHubServiceAllocStoneJobResponse) Descriptor() ([]byte, []int) {
	return file_service_types_v1_stone_hub_proto_rawDescGZIP(), []int{7}
}

func (x *StoneHubServiceAllocStoneJobResponse) GetTraceId() uint64 {
	if x != nil {
		return x.TraceId
	}
	return 0
}

func (m *StoneHubServiceAllocStoneJobResponse) GetStoneJobOneof() isStoneHubServiceAllocStoneJobResponse_StoneJobOneof {
	if m != nil {
		return m.StoneJobOneof
	}
	return nil
}

func (x *StoneHubServiceAllocStoneJobResponse) GetSecondaryPieceJob() *SecondaryJob {
	if x, ok := x.GetStoneJobOneof().(*StoneHubServiceAllocStoneJobResponse_SecondaryPieceJob); ok {
		return x.SecondaryPieceJob
	}
	return nil
}

type isStoneHubServiceAllocStoneJobResponse_StoneJobOneof interface {
	isStoneHubServiceAllocStoneJobResponse_StoneJobOneof()
}

type StoneHubServiceAllocStoneJobResponse_SecondaryPieceJob struct {
	SecondaryPieceJob *SecondaryJob `protobuf:"bytes,2,opt,name=secondary_piece_job,json=secondaryPieceJob,proto3,oneof"`
}

func (*StoneHubServiceAllocStoneJobResponse_SecondaryPieceJob) isStoneHubServiceAllocStoneJobResponse_StoneJobOneof() {
}

type StoneHubServiceDoneSecondaryPieceJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId     uint64               `protobuf:"varint,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	JobId       uint64               `protobuf:"varint,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	SecondarySp *StorageProviderInfo `protobuf:"bytes,3,opt,name=secondary_sp,json=secondarySp,proto3" json:"secondary_sp,omitempty"`
	ErrMessage  *ErrMessage          `protobuf:"bytes,4,opt,name=err_message,json=errMessage,proto3" json:"err_message,omitempty"`
}

func (x *StoneHubServiceDoneSecondaryPieceJobRequest) Reset() {
	*x = StoneHubServiceDoneSecondaryPieceJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_types_v1_stone_hub_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoneHubServiceDoneSecondaryPieceJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoneHubServiceDoneSecondaryPieceJobRequest) ProtoMessage() {}

func (x *StoneHubServiceDoneSecondaryPieceJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_types_v1_stone_hub_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoneHubServiceDoneSecondaryPieceJobRequest.ProtoReflect.Descriptor instead.
func (*StoneHubServiceDoneSecondaryPieceJobRequest) Descriptor() ([]byte, []int) {
	return file_service_types_v1_stone_hub_proto_rawDescGZIP(), []int{8}
}

func (x *StoneHubServiceDoneSecondaryPieceJobRequest) GetTraceId() uint64 {
	if x != nil {
		return x.TraceId
	}
	return 0
}

func (x *StoneHubServiceDoneSecondaryPieceJobRequest) GetJobId() uint64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *StoneHubServiceDoneSecondaryPieceJobRequest) GetSecondarySp() *StorageProviderInfo {
	if x != nil {
		return x.SecondarySp
	}
	return nil
}

func (x *StoneHubServiceDoneSecondaryPieceJobRequest) GetErrMessage() *ErrMessage {
	if x != nil {
		return x.ErrMessage
	}
	return nil
}

type StoneHubServiceDoneSecondaryPieceJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId    uint64      `protobuf:"varint,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	ErrMessage *ErrMessage `protobuf:"bytes,2,opt,name=err_message,json=errMessage,proto3" json:"err_message,omitempty"`
}

func (x *StoneHubServiceDoneSecondaryPieceJobResponse) Reset() {
	*x = StoneHubServiceDoneSecondaryPieceJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_types_v1_stone_hub_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoneHubServiceDoneSecondaryPieceJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoneHubServiceDoneSecondaryPieceJobResponse) ProtoMessage() {}

func (x *StoneHubServiceDoneSecondaryPieceJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_types_v1_stone_hub_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoneHubServiceDoneSecondaryPieceJobResponse.ProtoReflect.Descriptor instead.
func (*StoneHubServiceDoneSecondaryPieceJobResponse) Descriptor() ([]byte, []int) {
	return file_service_types_v1_stone_hub_proto_rawDescGZIP(), []int{9}
}

func (x *StoneHubServiceDoneSecondaryPieceJobResponse) GetTraceId() uint64 {
	if x != nil {
		return x.TraceId
	}
	return 0
}

func (x *StoneHubServiceDoneSecondaryPieceJobResponse) GetErrMessage() *ErrMessage {
	if x != nil {
		return x.ErrMessage
	}
	return nil
}

var File_service_types_v1_stone_hub_proto protoreflect.FileDescriptor

var file_service_types_v1_stone_hub_proto_rawDesc = []byte{
	0x0a, 0x20, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x5f, 0x68, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x21, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x93, 0x01, 0x0a, 0x22, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x48, 0x75, 0x62,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x39,
	0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x7f, 0x0a, 0x23, 0x53, 0x74, 0x6f,
	0x6e, 0x65, 0x48, 0x75, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0b, 0x65,
	0x72, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0a,
	0x65, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x75, 0x0a, 0x28, 0x53, 0x74,
	0x6f, 0x6e, 0x65, 0x48, 0x75, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x65, 0x67,
	0x69, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49,
	0x64, 0x22, 0xc2, 0x02, 0x0a, 0x29, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x48, 0x75, 0x62, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x45, 0x0a, 0x0f, 0x72, 0x65, 0x64, 0x75, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x79, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x64, 0x75, 0x6e, 0x64, 0x61,
	0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x72, 0x65, 0x64, 0x75, 0x6e, 0x64, 0x61,
	0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x65, 0x72, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x29, 0x53, 0x74, 0x6f, 0x6e, 0x65,
	0x48, 0x75, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x6f, 0x6e, 0x65, 0x50, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x69, 0x65, 0x63, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x78, 0x12, 0x3d, 0x0a, 0x0b, 0x65, 0x72, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x2a, 0x53, 0x74, 0x6f, 0x6e, 0x65,
	0x48, 0x75, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x6f, 0x6e, 0x65, 0x50, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x69, 0x65, 0x63, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x3d, 0x0a, 0x0b, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x40, 0x0a, 0x23, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x48, 0x75, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x22, 0xa6, 0x01, 0x0a, 0x24, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x48, 0x75, 0x62, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x13, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61,
	0x72, 0x79, 0x5f, 0x70, 0x69, 0x65, 0x63, 0x65, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x4a,
	0x6f, 0x62, 0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x50,
	0x69, 0x65, 0x63, 0x65, 0x4a, 0x6f, 0x62, 0x42, 0x11, 0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x6e, 0x65,
	0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0xe8, 0x01, 0x0a, 0x2b, 0x53,
	0x74, 0x6f, 0x6e, 0x65, 0x48, 0x75, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x6f,
	0x6e, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x50, 0x69, 0x65, 0x63, 0x65,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x0c,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x73, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x61, 0x72, 0x79, 0x53, 0x70, 0x12, 0x3d, 0x0a, 0x0b, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x2c, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x48,
	0x75, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x6f, 0x6e, 0x65, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x50, 0x69, 0x65, 0x63, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x3d, 0x0a, 0x0b, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x32, 0xd5, 0x05, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x48, 0x75, 0x62, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x7d, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x34, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x48, 0x75, 0x62,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x6f, 0x6e, 0x65, 0x48, 0x75, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x8f, 0x01, 0x0a, 0x12, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x3a, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x6f, 0x6e, 0x65, 0x48, 0x75, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x65, 0x67,
	0x69, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x48,
	0x75, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x92, 0x01, 0x0a, 0x13, 0x44, 0x6f, 0x6e, 0x65, 0x50, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x69, 0x65, 0x63, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x3b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x48, 0x75, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x44, 0x6f, 0x6e, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x69, 0x65, 0x63, 0x65,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x6f, 0x6e, 0x65, 0x48, 0x75, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x6f, 0x6e,
	0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x69, 0x65, 0x63, 0x65, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x0d, 0x41,
	0x6c, 0x6c, 0x6f, 0x63, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x35, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x6f, 0x6e, 0x65, 0x48, 0x75, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x6c, 0x6c, 0x6f, 0x63, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x48, 0x75, 0x62, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x53, 0x74, 0x6f, 0x6e, 0x65,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x98, 0x01,
	0x0a, 0x15, 0x44, 0x6f, 0x6e, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x50,
	0x69, 0x65, 0x63, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x3d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x6e, 0x65,
	0x48, 0x75, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x6f, 0x6e, 0x65, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x50, 0x69, 0x65, 0x63, 0x65, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x48,
	0x75, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x6f, 0x6e, 0x65, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x50, 0x69, 0x65, 0x63, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x6e, 0x62, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2f, 0x69, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_types_v1_stone_hub_proto_rawDescOnce sync.Once
	file_service_types_v1_stone_hub_proto_rawDescData = file_service_types_v1_stone_hub_proto_rawDesc
)

func file_service_types_v1_stone_hub_proto_rawDescGZIP() []byte {
	file_service_types_v1_stone_hub_proto_rawDescOnce.Do(func() {
		file_service_types_v1_stone_hub_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_types_v1_stone_hub_proto_rawDescData)
	})
	return file_service_types_v1_stone_hub_proto_rawDescData
}

var file_service_types_v1_stone_hub_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_service_types_v1_stone_hub_proto_goTypes = []interface{}{
	(*StoneHubServiceCreateObjectRequest)(nil),           // 0: service.types.v1.StoneHubServiceCreateObjectRequest
	(*StoneHubServiceCreateObjectResponse)(nil),          // 1: service.types.v1.StoneHubServiceCreateObjectResponse
	(*StoneHubServiceBeginUploadPayloadRequest)(nil),     // 2: service.types.v1.StoneHubServiceBeginUploadPayloadRequest
	(*StoneHubServiceBeginUploadPayloadResponse)(nil),    // 3: service.types.v1.StoneHubServiceBeginUploadPayloadResponse
	(*StoneHubServiceDonePrimaryPieceJobRequest)(nil),    // 4: service.types.v1.StoneHubServiceDonePrimaryPieceJobRequest
	(*StoneHubServiceDonePrimaryPieceJobResponse)(nil),   // 5: service.types.v1.StoneHubServiceDonePrimaryPieceJobResponse
	(*StoneHubServiceAllocStoneJobRequest)(nil),          // 6: service.types.v1.StoneHubServiceAllocStoneJobRequest
	(*StoneHubServiceAllocStoneJobResponse)(nil),         // 7: service.types.v1.StoneHubServiceAllocStoneJobResponse
	(*StoneHubServiceDoneSecondaryPieceJobRequest)(nil),  // 8: service.types.v1.StoneHubServiceDoneSecondaryPieceJobRequest
	(*StoneHubServiceDoneSecondaryPieceJobResponse)(nil), // 9: service.types.v1.StoneHubServiceDoneSecondaryPieceJobResponse
	(*v1.ObjectInfo)(nil),                                // 10: pkg.types.v1.ObjectInfo
	(*ErrMessage)(nil),                                   // 11: service.types.v1.ErrMessage
	(v1.RedundancyType)(0),                               // 12: pkg.types.v1.RedundancyType
	(*SecondaryJob)(nil),                                 // 13: service.types.v1.SecondaryJob
	(*StorageProviderInfo)(nil),                          // 14: service.types.v1.StorageProviderInfo
}
var file_service_types_v1_stone_hub_proto_depIdxs = []int32{
	10, // 0: service.types.v1.StoneHubServiceCreateObjectRequest.object_info:type_name -> pkg.types.v1.ObjectInfo
	11, // 1: service.types.v1.StoneHubServiceCreateObjectResponse.err_message:type_name -> service.types.v1.ErrMessage
	12, // 2: service.types.v1.StoneHubServiceBeginUploadPayloadResponse.redundancy_type:type_name -> pkg.types.v1.RedundancyType
	11, // 3: service.types.v1.StoneHubServiceBeginUploadPayloadResponse.err_message:type_name -> service.types.v1.ErrMessage
	11, // 4: service.types.v1.StoneHubServiceDonePrimaryPieceJobRequest.err_message:type_name -> service.types.v1.ErrMessage
	11, // 5: service.types.v1.StoneHubServiceDonePrimaryPieceJobResponse.err_message:type_name -> service.types.v1.ErrMessage
	13, // 6: service.types.v1.StoneHubServiceAllocStoneJobResponse.secondary_piece_job:type_name -> service.types.v1.SecondaryJob
	14, // 7: service.types.v1.StoneHubServiceDoneSecondaryPieceJobRequest.secondary_sp:type_name -> service.types.v1.StorageProviderInfo
	11, // 8: service.types.v1.StoneHubServiceDoneSecondaryPieceJobRequest.err_message:type_name -> service.types.v1.ErrMessage
	11, // 9: service.types.v1.StoneHubServiceDoneSecondaryPieceJobResponse.err_message:type_name -> service.types.v1.ErrMessage
	0,  // 10: service.types.v1.StoneHubService.CreateObject:input_type -> service.types.v1.StoneHubServiceCreateObjectRequest
	2,  // 11: service.types.v1.StoneHubService.BeginUploadPayload:input_type -> service.types.v1.StoneHubServiceBeginUploadPayloadRequest
	4,  // 12: service.types.v1.StoneHubService.DonePrimaryPieceJob:input_type -> service.types.v1.StoneHubServiceDonePrimaryPieceJobRequest
	6,  // 13: service.types.v1.StoneHubService.AllocStoneJob:input_type -> service.types.v1.StoneHubServiceAllocStoneJobRequest
	8,  // 14: service.types.v1.StoneHubService.DoneSecondaryPieceJob:input_type -> service.types.v1.StoneHubServiceDoneSecondaryPieceJobRequest
	1,  // 15: service.types.v1.StoneHubService.CreateObject:output_type -> service.types.v1.StoneHubServiceCreateObjectResponse
	3,  // 16: service.types.v1.StoneHubService.BeginUploadPayload:output_type -> service.types.v1.StoneHubServiceBeginUploadPayloadResponse
	5,  // 17: service.types.v1.StoneHubService.DonePrimaryPieceJob:output_type -> service.types.v1.StoneHubServiceDonePrimaryPieceJobResponse
	7,  // 18: service.types.v1.StoneHubService.AllocStoneJob:output_type -> service.types.v1.StoneHubServiceAllocStoneJobResponse
	9,  // 19: service.types.v1.StoneHubService.DoneSecondaryPieceJob:output_type -> service.types.v1.StoneHubServiceDoneSecondaryPieceJobResponse
	15, // [15:20] is the sub-list for method output_type
	10, // [10:15] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_service_types_v1_stone_hub_proto_init() }
func file_service_types_v1_stone_hub_proto_init() {
	if File_service_types_v1_stone_hub_proto != nil {
		return
	}
	file_service_types_v1_uploader_proto_init()
	file_service_types_v1_stone_node_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_types_v1_stone_hub_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoneHubServiceCreateObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_types_v1_stone_hub_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoneHubServiceCreateObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_types_v1_stone_hub_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoneHubServiceBeginUploadPayloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_types_v1_stone_hub_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoneHubServiceBeginUploadPayloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_types_v1_stone_hub_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoneHubServiceDonePrimaryPieceJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_types_v1_stone_hub_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoneHubServiceDonePrimaryPieceJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_types_v1_stone_hub_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoneHubServiceAllocStoneJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_types_v1_stone_hub_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoneHubServiceAllocStoneJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_types_v1_stone_hub_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoneHubServiceDoneSecondaryPieceJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_types_v1_stone_hub_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoneHubServiceDoneSecondaryPieceJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_service_types_v1_stone_hub_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*StoneHubServiceAllocStoneJobResponse_SecondaryPieceJob)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_types_v1_stone_hub_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_types_v1_stone_hub_proto_goTypes,
		DependencyIndexes: file_service_types_v1_stone_hub_proto_depIdxs,
		MessageInfos:      file_service_types_v1_stone_hub_proto_msgTypes,
	}.Build()
	File_service_types_v1_stone_hub_proto = out.File
	file_service_types_v1_stone_hub_proto_rawDesc = nil
	file_service_types_v1_stone_hub_proto_goTypes = nil
	file_service_types_v1_stone_hub_proto_depIdxs = nil
}
